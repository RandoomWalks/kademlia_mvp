   Compiling kademlia_mvp v0.1.0 (/home/jubajuba/code/rust/study_plan/scratch/kademlia_mvp)
warning: unused import: `tokio::time::sleep`
 --> src/main.rs:5:5
  |
5 | use tokio::time::sleep;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `debug`, `error`, `info`, and `warn`
 --> src/main.rs:6:11
  |
6 | use log::{debug, error, info, warn};
  |           ^^^^^  ^^^^^  ^^^^  ^^^^

error[E0592]: duplicate definitions with name `get`
   --> src/main.rs:257:5
    |
214 |     pub fn get(&self, key: &[u8]) -> Option<Vec<u8>> {
    |     ------------------------------------------------ other definition for `get`
...
257 |     pub fn get(&mut self, key: &[u8]) -> std::io::Result<Option<Vec<u8>>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ duplicate definitions for `get`

error[E0277]: the trait bound `tokio::time::Instant: Serialize` is not satisfied
    --> src/main.rs:50:17
     |
50   | #[derive(Clone, Serialize, Deserialize)]
     |                 ^^^^^^^^^ the trait `Serialize` is not implemented for `tokio::time::Instant`
...
54   |     last_seen: Instant,
     |     ------------------ required by a bound introduced by this call
     |
     = note: for local types consider adding `#[derive(serde::Serialize)]` to your `tokio::time::Instant` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Serialize`:
               &'a T
               &'a mut T
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
               (T0, T1, T2, T3, T4)
             and 131 others
note: required by a bound in `_::_serde::ser::SerializeStruct::serialize_field`
    --> /home/jubajuba/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.204/src/ser/mod.rs:1867:21
     |
1865 |     fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<(), Self::Error>
     |        --------------- required by a bound in this associated function
1866 |     where
1867 |         T: ?Sized + Serialize;
     |                     ^^^^^^^^^ required by this bound in `SerializeStruct::serialize_field`
     = note: this error originates in the derive macro `Serialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `tokio::time::Instant: Deserialize<'_>` is not satisfied
    --> src/main.rs:54:16
     |
54   |     last_seen: Instant,
     |                ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `tokio::time::Instant`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `tokio::time::Instant` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a Path
               &'a [u8]
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 149 others
note: required by a bound in `next_element`
    --> /home/jubajuba/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.204/src/de/mod.rs:1733:12
     |
1731 |     fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>
     |        ------------ required by a bound in this associated function
1732 |     where
1733 |         T: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `SeqAccess::next_element`

error[E0277]: the trait bound `tokio::time::Instant: Deserialize<'_>` is not satisfied
    --> src/main.rs:54:16
     |
54   |     last_seen: Instant,
     |                ^^^^^^^ the trait `Deserialize<'_>` is not implemented for `tokio::time::Instant`
     |
     = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `tokio::time::Instant` type
     = note: for types from other crates check whether the crate offers a `serde` feature flag
     = help: the following other types implement trait `Deserialize<'de>`:
               &'a Path
               &'a [u8]
               &'a str
               ()
               (T,)
               (T0, T1)
               (T0, T1, T2)
               (T0, T1, T2, T3)
             and 149 others
note: required by a bound in `next_value`
    --> /home/jubajuba/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.204/src/de/mod.rs:1872:12
     |
1870 |     fn next_value<V>(&mut self) -> Result<V, Self::Error>
     |        ---------- required by a bound in this associated function
1871 |     where
1872 |         V: Deserialize<'de>,
     |            ^^^^^^^^^^^^^^^^ required by this bound in `MapAccess::next_value`

error[E0277]: the trait bound `tokio::time::Instant: Deserialize<'_>` is not satisfied
  --> src/main.rs:50:28
   |
50 | #[derive(Clone, Serialize, Deserialize)]
   |                            ^^^^^^^^^^^ the trait `Deserialize<'_>` is not implemented for `tokio::time::Instant`
   |
   = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `tokio::time::Instant` type
   = note: for types from other crates check whether the crate offers a `serde` feature flag
   = help: the following other types implement trait `Deserialize<'de>`:
             &'a Path
             &'a [u8]
             &'a str
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
           and 149 others
note: required by a bound in `_::_serde::__private::de::missing_field`
  --> /home/jubajuba/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.204/src/private/de.rs:25:8
   |
23 | pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>
   |        ------------- required by a bound in this function
24 | where
25 |     V: Deserialize<'de>,
   |        ^^^^^^^^^^^^^^^^ required by this bound in `missing_field`
   = note: this error originates in the derive macro `Deserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: `NodeId` doesn't implement `std::fmt::Debug`
   --> src/main.rs:279:12
    |
277 | #[derive(Serialize, Deserialize, Debug)]
    |                                  ----- in this derive macro expansion
278 | pub enum Message {
279 |     Ping { sender: NodeId },
    |            ^^^^^^^^^^^^^^ `NodeId` cannot be formatted using `{:?}`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `NodeId`, which is required by `&NodeId: std::fmt::Debug`
    = note: add `#[derive(Debug)]` to `NodeId` or manually `impl std::fmt::Debug for NodeId`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `NodeId` with `#[derive(Debug)]`
    |
21  + #[derive(Debug)]
22  | pub struct NodeId([u8; 32]);
    |

error[E0277]: `NodeId` doesn't implement `std::fmt::Debug`
   --> src/main.rs:280:12
    |
277 | #[derive(Serialize, Deserialize, Debug)]
    |                                  ----- in this derive macro expansion
...
280 |     Pong { sender: NodeId },
    |            ^^^^^^^^^^^^^^ `NodeId` cannot be formatted using `{:?}`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `NodeId`, which is required by `&NodeId: std::fmt::Debug`
    = note: add `#[derive(Debug)]` to `NodeId` or manually `impl std::fmt::Debug for NodeId`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `NodeId` with `#[derive(Debug)]`
    |
21  + #[derive(Debug)]
22  | pub struct NodeId([u8; 32]);
    |

error[E0277]: `NodeId` doesn't implement `std::fmt::Debug`
   --> src/main.rs:282:16
    |
277 | #[derive(Serialize, Deserialize, Debug)]
    |                                  ----- in this derive macro expansion
...
282 |     FindNode { target: NodeId },
    |                ^^^^^^^^^^^^^^ `NodeId` cannot be formatted using `{:?}`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `NodeId`, which is required by `&NodeId: std::fmt::Debug`
    = note: add `#[derive(Debug)]` to `NodeId` or manually `impl std::fmt::Debug for NodeId`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `NodeId` with `#[derive(Debug)]`
    |
21  + #[derive(Debug)]
22  | pub struct NodeId([u8; 32]);
    |

error[E0277]: `NodeId` doesn't implement `std::fmt::Debug`
   --> src/main.rs:284:16
    |
277 | #[derive(Serialize, Deserialize, Debug)]
    |                                  ----- in this derive macro expansion
...
284 |     NodesFound(Vec<(NodeId, SocketAddr)>),
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^ `NodeId` cannot be formatted using `{:?}`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `NodeId`, which is required by `&Vec<(NodeId, std::net::SocketAddr)>: std::fmt::Debug`
    = note: add `#[derive(Debug)]` to `NodeId` or manually `impl std::fmt::Debug for NodeId`
    = help: the trait `std::fmt::Debug` is implemented for `Vec<T, A>`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `NodeId` with `#[derive(Debug)]`
    |
21  + #[derive(Debug)]
22  | pub struct NodeId([u8; 32]);
    |

error[E0277]: `NodeId` doesn't implement `std::fmt::Debug`
   --> src/main.rs:292:11
    |
289 | #[derive(Debug)]
    |          ----- in this derive macro expansion
...
292 |     Nodes(Vec<(NodeId, SocketAddr)>),
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^ `NodeId` cannot be formatted using `{:?}`
    |
    = help: the trait `std::fmt::Debug` is not implemented for `NodeId`, which is required by `&Vec<(NodeId, std::net::SocketAddr)>: std::fmt::Debug`
    = note: add `#[derive(Debug)]` to `NodeId` or manually `impl std::fmt::Debug for NodeId`
    = help: the trait `std::fmt::Debug` is implemented for `Vec<T, A>`
    = note: this error originates in the derive macro `Debug` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider annotating `NodeId` with `#[derive(Debug)]`
    |
21  + #[derive(Debug)]
22  | pub struct NodeId([u8; 32]);
    |

warning: variable does not need to be mutable
   --> src/main.rs:264:13
    |
264 |         let mut nodes = self.find_node(&target);
    |             ----^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

Some errors have detailed explanations: E0277, E0592.
For more information about an error, try `rustc --explain E0277`.
warning: `kademlia_mvp` (bin "kademlia_mvp") generated 3 warnings
error: could not compile `kademlia_mvp` (bin "kademlia_mvp") due to 10 previous errors; 3 warnings emitted
